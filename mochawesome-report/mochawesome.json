{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-25T13:20:24.943Z",
    "end": "2023-05-25T13:20:25.665Z",
    "duration": 722,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e371f1df-00f0-48c0-adc6-9f3640aaa837",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "60b0b107-0277-459f-9da0-894fd9aec7be",
          "title": "POST API Request Test",
          "fullFile": "/Users/babatundeojo/Desktop/API Testing/axios-api-testing/api-tests/json-placeholder-typicode/add-user.js",
          "file": "/api-tests/json-placeholder-typicode/add-user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have status code 201",
              "fullTitle": "POST API Request Test should have status code 201",
              "timedOut": false,
              "duration": 714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.status).equal(201);",
              "err": {},
              "uuid": "5a555e00-6a01-4117-8b6d-37460eac7226",
              "parentUUID": "60b0b107-0277-459f-9da0-894fd9aec7be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have status text Created",
              "fullTitle": "POST API Request Test should have status text Created",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.statusText).to.be.equal(\"Created\");",
              "err": {},
              "uuid": "0fac3857-99e6-41bb-afae-25112b2dcc42",
              "parentUUID": "60b0b107-0277-459f-9da0-894fd9aec7be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be an object",
              "fullTitle": "POST API Request Test should be an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response\nexpect(res.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "45fbcc79-dbef-4868-8418-d506770ef922",
              "parentUUID": "60b0b107-0277-459f-9da0-894fd9aec7be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have valid user id",
              "fullTitle": "POST API Request Test should have valid user id",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.data.id).eq(11);",
              "err": {},
              "uuid": "a923a793-5807-4232-9e29-2ec50b7c5607",
              "parentUUID": "60b0b107-0277-459f-9da0-894fd9aec7be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a555e00-6a01-4117-8b6d-37460eac7226",
            "0fac3857-99e6-41bb-afae-25112b2dcc42",
            "45fbcc79-dbef-4868-8418-d506770ef922",
            "a923a793-5807-4232-9e29-2ec50b7c5607"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9777837-640a-4d1e-945f-cfc61d9092c9",
          "title": "GET API Request Test",
          "fullFile": "/Users/babatundeojo/Desktop/API Testing/axios-api-testing/api-tests/json-placeholder-typicode/get-users.js",
          "file": "/api-tests/json-placeholder-typicode/get-users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have status code 200",
              "fullTitle": "GET API Request Test should have status code 200",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.status).equal(200);",
              "err": {},
              "uuid": "ff9114b0-426e-4db3-9a8b-d5f5f3c4ec44",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have status text OK",
              "fullTitle": "GET API Request Test should have status text OK",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.statusText).to.be.equal(\"OK\");",
              "err": {},
              "uuid": "0fa563e7-5a80-4dd7-9b7d-f7693d8389b9",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be an array",
              "fullTitle": "GET API Request Test should be an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response\nexpect(res.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "c8780c28-9d4d-4775-9dc7-e52a69f0a299",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if user with id 1 is Leanne Graham",
              "fullTitle": "GET API Request Test should check if user with id 1 is Leanne Graham",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.data[0].name).equal(\"Leanne Graham\");",
              "err": {},
              "uuid": "263c5d42-cfaf-4753-beba-6a009d949486",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should contain valid keys",
              "fullTitle": "GET API Request Test should contain valid keys",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.data[0]).to.have.keys(\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\");",
              "err": {},
              "uuid": "270d363a-379c-459a-b5f4-5a32d3a6d647",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have 10 users on the list",
              "fullTitle": "GET API Request Test should have 10 users on the list",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await response;\nexpect(res.data.length).to.equal(10);",
              "err": {},
              "uuid": "9dfa2c5f-0d7c-42e5-88e9-e7363e93d306",
              "parentUUID": "d9777837-640a-4d1e-945f-cfc61d9092c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff9114b0-426e-4db3-9a8b-d5f5f3c4ec44",
            "0fa563e7-5a80-4dd7-9b7d-f7693d8389b9",
            "c8780c28-9d4d-4775-9dc7-e52a69f0a299",
            "263c5d42-cfaf-4753-beba-6a009d949486",
            "270d363a-379c-459a-b5f4-5a32d3a6d647",
            "9dfa2c5f-0d7c-42e5-88e9-e7363e93d306"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}